<?xml version="1.0"?>
<rss version="2.0">

<channel>
	<title>Planet Eclipse</title>
	<link>http://planeteclipse.org/planet/</link>
	<language>en</language>
	<description>Planet Eclipse - http://planeteclipse.org/planet/</description>

<item>
	<title>Maximilian and Jonas: EclipseSource Oomph Profile – updated to 2019-06</title>
	<guid isPermaLink="false">https://eclipsesource.com/?p=41826</guid>
	<link>https://eclipsesource.com/blogs/2019/06/27/eclipsesource-oomph-profile-updated-to-2019-06/</link>
	<description>&lt;p&gt;Last week, Eclipse 2019-06 has been released, a new version of the Eclipse IDE and platform. The first notable improvement is...&lt;/p&gt;&lt;p&gt;The post &lt;a href=&quot;https://eclipsesource.com/blogs/2019/06/27/eclipsesource-oomph-profile-updated-to-2019-06/&quot; rel=&quot;nofollow&quot;&gt;EclipseSource Oomph Profile – updated to 2019-06&lt;/a&gt; appeared first on &lt;a href=&quot;https://eclipsesource.com&quot; rel=&quot;nofollow&quot;&gt;EclipseSource&lt;/a&gt;.&lt;/p&gt;</description>
	<pubDate>Thu, 27 Jun 2019 08:17:34 +0000</pubDate>
</item>
<item>
	<title>Donald Raab: Mysterious Eclipse Collections APIs: forEachInBoth</title>
	<guid isPermaLink="false">https://medium.com/p/2102912f1eee</guid>
	<link>https://medium.com/@donraab/mysterious-eclipse-collections-apis-foreachinboth-2102912f1eee?source=rss-df39b86e9f04------2</link>
	<description>&lt;p&gt;Sometimes APIs go undiscovered for a long time&lt;/p&gt;&lt;figure&gt;&lt;img alt=&quot;&quot; src=&quot;https://cdn-images-1.medium.com/max/1024/1*8aeGt_jtxUp_7BA6YC4MJQ.jpeg&quot; /&gt;What is Stonehenge?&lt;/figure&gt;&lt;h3&gt;Have you ever heard of forEachInBoth?&lt;/h3&gt;&lt;p&gt;There is a method named forEachInBoth available in &lt;a href=&quot;https://github.com/eclipse/eclipse-collections&quot;&gt;Eclipse Collections&lt;/a&gt;, but it can only be found on four utility classes. You can find the method on ArrayIterate, ListIterate, RandomAccessListIterate and ArrayListIterate.&lt;/p&gt;&lt;p&gt;The method forEachInBoth, takes two Lists or Arrays of the same size and iterates over both of them passing the elements from both lists at particular indexes into a two argument procedure.&lt;/p&gt;&lt;p&gt;The method has not been promoted to the ListIterable API in Eclipse Collections. This is probably because you can now zip two lists together and just use forEach or any of the other rich APIs from MutableList instead.&lt;/p&gt;&lt;h3&gt;The Method Signatures&lt;/h3&gt;&lt;p&gt;The method signatures for forEachInBoth on ListIterate, RandomAccessListIterate and ArrayListIterate are very similar so I will only show the signatures for ListIterate and ArrayIterate.&lt;/p&gt;&lt;h4&gt;ListIterate&lt;/h4&gt;&lt;pre&gt;public static &amp;lt;T1, T2&amp;gt; void forEachInBoth(&lt;br /&gt;        List&amp;lt;T1&amp;gt; list1, &lt;br /&gt;        List&amp;lt;T2&amp;gt; list2, &lt;br /&gt;        Procedure2&amp;lt;? super T1, ? super T2&amp;gt; procedure)&lt;/pre&gt;&lt;h4&gt;ArrayIterate&lt;/h4&gt;&lt;pre&gt;public static &amp;lt;T1, T2&amp;gt; void forEachInBoth(&lt;br /&gt;        T1[] objectArray1,&lt;br /&gt;        T2[] objectArray2,&lt;br /&gt;        Procedure2&amp;lt;? super T1, ? super T2&amp;gt; procedure)&lt;/pre&gt;&lt;h3&gt;When is forEachInBoth useful?&lt;/h3&gt;&lt;p&gt;One example that I discovered that forEachInBoth works well with is for converting two separate lists or arrays into a Map. Using forEachInBoth, I am able to use a method reference for calling put on the map instance. This was unexpectedly cool.&lt;/p&gt;&lt;figure&gt;&lt;img alt=&quot;&quot; src=&quot;https://cdn-images-1.medium.com/max/1024/1*o6s59wsMU-S8JcCoRB4kkw.png&quot; /&gt;Putting two lists into a Map&lt;/figure&gt;&lt;h4&gt;The Source&lt;/h4&gt;&lt;pre&gt;@Test&lt;br /&gt;public void forEachInBothList()&lt;br /&gt;{&lt;br /&gt;    List&amp;lt;Integer&amp;gt; one = &lt;br /&gt;            Lists.&lt;strong&gt;&lt;em&gt;mutable&lt;/em&gt;&lt;/strong&gt;.with(1, 2, 3);&lt;br /&gt;    List&amp;lt;String&amp;gt; two = &lt;br /&gt;            Lists.&lt;strong&gt;&lt;em&gt;mutable&lt;/em&gt;&lt;/strong&gt;.with(&lt;strong&gt;&quot;One&quot;&lt;/strong&gt;, &lt;strong&gt;&quot;Two&quot;&lt;/strong&gt;, &lt;strong&gt;&quot;Three&quot;&lt;/strong&gt;);&lt;br /&gt;    Map&amp;lt;Integer, String&amp;gt; map = Maps.&lt;strong&gt;&lt;em&gt;mutable&lt;/em&gt;&lt;/strong&gt;.empty();&lt;br /&gt;&lt;br /&gt;    ListIterate.&lt;em&gt;forEachInBoth&lt;/em&gt;(one, two, map::put);&lt;br /&gt;&lt;br /&gt;    Assert.&lt;em&gt;assertEquals&lt;/em&gt;(&lt;br /&gt;            Maps.&lt;strong&gt;&lt;em&gt;mutable&lt;/em&gt;&lt;/strong&gt;.with(1, &lt;strong&gt;&quot;One&quot;&lt;/strong&gt;, 2, &lt;strong&gt;&quot;Two&quot;&lt;/strong&gt;, 3, &lt;strong&gt;&quot;Three&quot;&lt;/strong&gt;), &lt;br /&gt;            map);&lt;br /&gt;}&lt;/pre&gt;&lt;p&gt;This could easily work with two arrays of the same size using ArrayIterate instead.&lt;/p&gt;&lt;h3&gt;What about zip?&lt;/h3&gt;&lt;p&gt;If you use zip instead, you can use the fluent API to convert the zipped Lists into a Map using toMap. However, I could not take an existing Map and iterate using forEach or each and call Map.put since I would be iterating over Pair instances that would need to have the the two component parts of the pairs extracted and passed in as the key and value parameters.&lt;/p&gt;&lt;figure&gt;&lt;img alt=&quot;&quot; src=&quot;https://cdn-images-1.medium.com/max/1024/1*882skpvmBLh556IHkK5mOQ.png&quot; /&gt;Zipping two lists and putting them into a Map using toMap&lt;/figure&gt;&lt;h4&gt;The Source&lt;/h4&gt;&lt;pre&gt;@Test&lt;br /&gt;public void zipList()&lt;br /&gt;{&lt;br /&gt;    MutableList&amp;lt;Integer&amp;gt; one =&lt;br /&gt;            Lists.&lt;strong&gt;&lt;em&gt;mutable&lt;/em&gt;&lt;/strong&gt;.with(1, 2, 3);&lt;br /&gt;    MutableList&amp;lt;String&amp;gt; two =&lt;br /&gt;            Lists.&lt;strong&gt;&lt;em&gt;mutable&lt;/em&gt;&lt;/strong&gt;.with(&lt;strong&gt;&quot;One&quot;&lt;/strong&gt;, &lt;strong&gt;&quot;Two&quot;&lt;/strong&gt;, &lt;strong&gt;&quot;Three&quot;&lt;/strong&gt;);&lt;br /&gt;&lt;br /&gt;    MutableMap&amp;lt;Integer, String&amp;gt; map =&lt;br /&gt;            one.zip(two).toMap(Pair::getOne, Pair::getTwo);&lt;br /&gt;&lt;br /&gt;    Assert.&lt;em&gt;assertEquals&lt;/em&gt;(&lt;br /&gt;            Maps.&lt;strong&gt;&lt;em&gt;mutable&lt;/em&gt;&lt;/strong&gt;.with(1, &lt;strong&gt;&quot;One&quot;&lt;/strong&gt;, 2, &lt;strong&gt;&quot;Two&quot;&lt;/strong&gt;, 3, &lt;strong&gt;&quot;Three&quot;&lt;/strong&gt;),&lt;br /&gt;            map);&lt;br /&gt;}&lt;/pre&gt;&lt;p&gt;In the case of zip with this example, there is a temporary List created after zip is called, but it will be garbage collected after the call to toMap since the List is not referenced anywhere. This same code can be implemented lazily by calling asLazy before calling zip. This removes the temporary List creation.&lt;/p&gt;&lt;pre&gt;MutableMap&amp;lt;Integer, String&amp;gt; map =&lt;br /&gt;        one.asLazy()&lt;br /&gt;                .zip(two)&lt;br /&gt;                .toMap(Pair::getOne, Pair::getTwo);&lt;/pre&gt;&lt;h3&gt;When to use forEachInBoth or zip?&lt;/h3&gt;&lt;p&gt;The primary benefit of forEachInBoth is that it is located in static utility and will work directly with Java arrays and any java.util.List. So if you need to convert two JDK Lists quickly into a Map, it might just be what the doctor ordered. However, because the method forEachInBoth returns void, you will not be able to make fluent methods calls like you can using zip. Most of the time, you may find zip more useful when dealing with two lists especially if you are performing multiple operations on the result.&lt;/p&gt;&lt;p&gt;If you discover a novel use case where forEachInBoth works well, please let us know by creating an &lt;a href=&quot;https://github.com/eclipse/eclipse-collections/issues&quot;&gt;issue on GitHub&lt;/a&gt;. We could move forEachInBoth up directly to the ListIterable API if there prove to be more good use cases that we just haven’t seen yet.&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;https://github.com/eclipse/eclipse-collections&quot;&gt;&lt;em&gt;Eclipse Collections&lt;/em&gt;&lt;/a&gt;&lt;em&gt; is open for &lt;/em&gt;&lt;a href=&quot;https://github.com/eclipse/eclipse-collections/blob/master/CONTRIBUTING.md&quot;&gt;&lt;em&gt;contributions&lt;/em&gt;&lt;/a&gt;&lt;em&gt;. If you like the library, you can let us know by starring it on GitHub.&lt;/em&gt;&lt;/p&gt;&lt;img height=&quot;1&quot; src=&quot;https://medium.com/_/stat?event=post.clientViewed&amp;amp;referrerSource=full_rss&amp;amp;postId=2102912f1eee&quot; width=&quot;1&quot; /&gt;</description>
	<pubDate>Wed, 26 Jun 2019 13:31:58 +0000</pubDate>
</item>
<item>
	<title>Maximilian and Jonas: EMF Forms and EMF Client Platform 1.21.0 released!</title>
	<guid isPermaLink="false">https://eclipsesource.com/?p=41810</guid>
	<link>https://eclipsesource.com/blogs/2019/06/25/emf-forms-and-emf-client-platform-1-21-0-released/</link>
	<description>&lt;p&gt;We are happy to announce that with the Eclipse Release 2019-06, we have also shipped  EMF Forms and EMF Client Platform...&lt;/p&gt;&lt;p&gt;The post &lt;a href=&quot;https://eclipsesource.com/blogs/2019/06/25/emf-forms-and-emf-client-platform-1-21-0-released/&quot; rel=&quot;nofollow&quot;&gt;EMF Forms and EMF Client Platform 1.21.0 released!&lt;/a&gt; appeared first on &lt;a href=&quot;https://eclipsesource.com&quot; rel=&quot;nofollow&quot;&gt;EclipseSource&lt;/a&gt;.&lt;/p&gt;</description>
	<pubDate>Tue, 25 Jun 2019 20:40:05 +0000</pubDate>
</item>
<item>
	<title>itemis: Graphical Editing Framework (GEF) 5.1.0 Release</title>
	<guid isPermaLink="true">https://blogs.itemis.com/en/graphical-editing-framework-gef-5.1.0-release</guid>
	<link>https://blogs.itemis.com/en/graphical-editing-framework-gef-5.1.0-release</link>
	<description>&lt;p&gt;The Eclipse GEF team is happy to announce that version 5.1.0 of the &lt;a href=&quot;https://www.eclipse.org/gef/&quot; title=&quot; Eclipse&quot;&gt;Eclipse Graphical Editing Framework&lt;/a&gt; is part of the Eclipse 2019-06 simultaneous release:&lt;/p&gt; 
&lt;p&gt; &lt;/p&gt; 
&lt;img alt=&quot;GEF_Installation&quot; src=&quot;https://blogs.itemis.com/hs-fs/hubfs/Blog%20(2019)/Eclipse/GRAPHICAL%20EDITING%20FRAMEWORK%20(GEF)%205.1.0%20RELEASE/GEF_Installation.jpg?width=869&amp;amp;name=GEF_Installation.jpg&quot; style=&quot;width: 869px;&quot; width=&quot;869&quot; /&gt; 
&lt;p&gt; &lt;/p&gt; 
&lt;p&gt;The project team has worked hard since the &lt;strong&gt;&lt;a href=&quot;https://blogs.itemis.com/en/graphical-editing-framework-gef-5.0.0-release&quot; title=&quot; Graphical Editing Framework (GEF) 5.0.0 Release&quot;&gt; Eclipse GEF 5.0.0 release &lt;/a&gt;&lt;/strong&gt; two years ago. The new release fixes &lt;a href=&quot;https://projects.eclipse.org/projects/tools.gef/releases/5.1.0-2019-06/bugs&quot;&gt;&lt;strong&gt;issues&lt;/strong&gt;&lt;/a&gt; on the &lt;em&gt;GEF MVC&lt;/em&gt;, &lt;em&gt;GEF Zest&lt;/em&gt;, and &lt;em&gt;GEF DOT&lt;/em&gt; components.&lt;/p&gt; 
&lt;p&gt;We would like to thank all contributors who made this release possible:&lt;/p&gt; 
&lt;p&gt;&lt;img alt=&quot;GEF_Contributions&quot; src=&quot;https://blogs.itemis.com/hs-fs/hubfs/Blog%20(2019)/Embedded/GRAPHICAL%20EDITING%20FRAMEWORK%20(GEF)%205.1.0%20RELEASE/GEF_Contributions.png?width=874&amp;amp;name=GEF_Contributions.png&quot; style=&quot;width: 874px;&quot; width=&quot;874&quot; /&gt;&lt;/p&gt; 
&lt;p&gt; &lt;/p&gt; 
&lt;p&gt;Your feedback regarding the new release is highly appreciated. If you have any questions or suggestions, please let us know via the &lt;a href=&quot;https://www.eclipse.org/forums/index.php?t=thread&amp;amp;frm_id=81&quot; title=&quot;Eclipse GEF forum&quot;&gt;&lt;strong&gt;Eclipse GEF forum&lt;/strong&gt;&lt;/a&gt; or create an issue on &lt;a href=&quot;https://bugs.eclipse.org/bugs/describecomponents.cgi?product=GEF&quot; title=&quot;Eclipse Bugzilla&quot;&gt;&lt;strong&gt;Eclipse Bugzilla&lt;/strong&gt;&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;For further information, we recommend to take a look at the &lt;strong&gt;&lt;a href=&quot;https://blogs.itemis.com/topic/gef&quot; title=&quot;More Eclipse GEF blog articles&quot;&gt;Eclipse GEF blog articles&lt;/a&gt;&lt;/strong&gt;, watch the &lt;a href=&quot;https://www.youtube.com/watch?v=GnSVLNYfGlk&quot; title=&quot;Eclipse GEF DOT Video&quot;&gt;&lt;strong&gt;Eclipse GEF session on the EclipseCon Europe 2018&lt;/strong&gt;&lt;/a&gt;, and try out the&lt;strong&gt; &lt;a href=&quot;https://info.itemis.com/en/gef/tutorials/&quot; title=&quot;Online tutorial: Getting started with GEF 5.0&quot;&gt;Getting started with Eclipse GEF online tutorial&lt;/a&gt;&lt;/strong&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;/p&gt;  
&lt;img alt=&quot;&quot; height=&quot;1&quot; src=&quot;https://track.hubspot.com/__ptq.gif?a=761475&amp;amp;k=14&amp;amp;r=https%3A%2F%2Fblogs.itemis.com%2Fen%2Fgraphical-editing-framework-gef-5.1.0-release&amp;amp;bu=https%253A%252F%252Fblogs.itemis.com&amp;amp;bvt=rss&quot; style=&quot;width: 1px!important;&quot; width=&quot;1&quot; /&gt;</description>
	<pubDate>Tue, 25 Jun 2019 08:00:00 +0000</pubDate>
	<author>miklossy@itemis.de (Tamas Miklossy)</author>
</item>
<item>
	<title>Eclipse Announcements: Eclipse ioFog: Evolving Toward Native Kubernetes Orchestration at the Edge</title>
	<guid isPermaLink="true">http://feedproxy.google.com/~r/eclipse/fnews/~3/LxHgMGOZVEM/eclipse-iofog-evolving-toward-native-kubernetes-orchestration-edge</guid>
	<link>http://feedproxy.google.com/~r/eclipse/fnews/~3/LxHgMGOZVEM/eclipse-iofog-evolving-toward-native-kubernetes-orchestration-edge</link>
	<description>The Eclipse Foundation is excited to support today's announcement of the initial availability of Eclipse ioFog features that make any Kubernetes distribution edge-aware.&lt;img alt=&quot;&quot; height=&quot;1&quot; src=&quot;http://feeds.feedburner.com/~r/eclipse/fnews/~4/LxHgMGOZVEM&quot; width=&quot;1&quot; /&gt;</description>
	<pubDate>Mon, 24 Jun 2019 18:00:00 +0000</pubDate>
</item>
<item>
	<title>Jens Reimann: Bringing IoT to Red Hat AMQ Online</title>
	<guid isPermaLink="false">https://dentrassi.de/?p=4160</guid>
	<link>https://dentrassi.de/2019/06/24/bringing-iot-to-red-hat-amq-online/</link>
	<description>&lt;p&gt;&lt;a href=&quot;https://access.redhat.com/documentation/en-us/red_hat_amq/7.2/html/amq_online_1.1_on_openshift_container_platform_release_notes/index&quot; rel=&quot;noreferrer noopener&quot; target=&quot;_blank&quot;&gt;Red Hat AMQ Online 1.1&lt;/a&gt; was recently announced, and I am excited about it because it contains a tech preview of our Internet of Things &lt;a href=&quot;https://access.redhat.com/documentation/en-us/red_hat_amq/7.2/html/amq_online_1.1_on_openshift_container_platform_release_notes/tech-preview-online#internet_of_things_iot_functionality&quot; rel=&quot;noreferrer noopener&quot; target=&quot;_blank&quot;&gt;(IoT) support&lt;/a&gt;. AMQ Online is the “messaging as service solution” from Red Hat AMQ. Leveraging the work we did on &lt;a href=&quot;https://www.eclipse.org/hono/&quot; rel=&quot;noreferrer noopener&quot; target=&quot;_blank&quot;&gt;Eclipse Hono&lt;/a&gt; allows us to integrate a &lt;a href=&quot;https://dentrassi.de/2018/07/25/scaling-iot-eclipse-hono/&quot; rel=&quot;noreferrer noopener&quot; target=&quot;_blank&quot;&gt;scalable&lt;/a&gt;,  cloud-native IoT personality into this general-purpose messaging layer.  And the whole reason why you need an IoT messaging layer is so you can  focus on connecting your cloud-side application with the millions of  devices that you have out there.&lt;/p&gt;



&lt;span id=&quot;more-4160&quot;&gt;&lt;/span&gt;



&lt;p class=&quot;has-background has-very-light-gray-background-color&quot;&gt;&lt;em&gt;This post was originally published on &lt;a href=&quot;https://developers.redhat.com/blog/&quot; rel=&quot;noreferrer noopener&quot; target=&quot;_blank&quot;&gt;Red Hat Developers&lt;/a&gt;, the community to learn, code, and share faster. To read the original post, click &lt;a href=&quot;https://developers.redhat.com/blog/2019/05/14/bringing-iot-to-red-hat-amq-online/&quot; rel=&quot;noreferrer noopener&quot; target=&quot;_blank&quot;&gt;here&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;



&lt;h2&gt;What is Eclipse Hono&lt;img alt=&quot;™&quot; class=&quot;wp-smiley&quot; src=&quot;https://s.w.org/images/core/emoji/12.0.0-1/72x72/2122.png&quot; style=&quot;height: 1em;&quot; /&gt;?&lt;/h2&gt;



&lt;p&gt;Eclipse Hono is an IoT abstraction layer. It defines APIs in order to build an IoT stack in the cloud, taking care of things like device credentials, protocols, and scalability. For some of those APIs, it comes with a ready-to-run implementation, such as the MQTT protocol adapter. For others, such as the device registry, it only defines the necessary API. The actual implementation must be provided to the system.&lt;/p&gt;



&lt;div class=&quot;wp-block-image&quot;&gt;&lt;figure class=&quot;aligncenter is-resized&quot;&gt;&lt;img alt=&quot;Eclipse Hono IoT architecture overview&quot; class=&quot;wp-image-4165&quot; height=&quot;346&quot; src=&quot;https://dentrassi.de/wp-content/uploads/hono-overview.svg&quot; width=&quot;849&quot; /&gt;Eclipse Hono overview&lt;/figure&gt;&lt;/div&gt;



&lt;p&gt;A key feature of Hono is that it normalizes the different IoT-specific protocols on &lt;a href=&quot;http://www.amqp.org/specification/1.0/amqp-org-download&quot; rel=&quot;noreferrer noopener&quot; target=&quot;_blank&quot;&gt;AMQP 1.0&lt;/a&gt;.  This protocol is common on the data center side, and it is quite  capable of handling the requirements on throughput and back-pressure.  However, on the IoT devices side, other protocols might have more  benefits for certain use cases. MQTT is a favorite for many people, as  is plain HTTP due to its simplicity. LoRaWAN, CoAP, Sigfox, etc. all  have their pros and cons. If you want to play in the world of IoT, you  simply have to support them all. Even when it comes to custom protocols,  Hono provides a software stack to easily implement your custom  protocol.&lt;/p&gt;



&lt;h2&gt;AMQ Online&lt;/h2&gt;



&lt;p&gt;Hono requires an AMQP 1.0 messaging backend. It requires a broker and a  component called “router” (which doesn’t own messages but only forwards  them to the correct receiver). Of course, it expects the AMQP layer to  be as scalable as Hono itself. AMQ Online is a “self-service,” messaging  solution for the cloud. So it makes sense to allow Hono to run on top  of it. We had this deployment model for a while in Hono, allowing the  use of &lt;a href=&quot;https://enmasse.io/&quot; rel=&quot;noreferrer noopener&quot; target=&quot;_blank&quot;&gt;EnMasse&lt;/a&gt; (the upstream project of AMQ Online).&lt;/p&gt;



&lt;h2&gt;Self-service IoT&lt;/h2&gt;



&lt;p&gt;In a world of Kubernetes and operators, the thing that you are actually looking for is more like this:&lt;/p&gt;



&lt;pre class=&quot;wp-block-code&quot;&gt;&lt;code&gt;kind: IoTProject
 apiVersion: iot.enmasse.io/v1alpha1
 metadata:
   name: iot
   namespace: myapp
 spec:
   downstreamStrategy:
     managedStrategy:
       addressSpace:
         name: iot
         plan: standard-unlimited
       addresses:
         telemetry:
           plan: standard-small-anycast
         event:
           plan: standard-small-queue
         command:
           plan: standard-small-anycast&lt;/code&gt;&lt;/pre&gt;



&lt;p&gt;You simply define your IoT project, by creating a new custom resource using &lt;code&gt;kubectl create -f&lt;/code&gt;  and you are done. If you have the IoT operator of AMQ Online 1.1  deployed, then it will create the necessary address space for you, and  set up the required addresses.&lt;/p&gt;



&lt;p&gt;The IoT project will also automatically act as a Hono tenant. In this example, the Hono tenant would be &lt;code&gt;myapp.iot&lt;/code&gt;, and so the full authentication ID of e.g. &lt;code&gt;sensor1&lt;/code&gt; would be &lt;code&gt;sensor1@myapp.iot&lt;/code&gt;. The IoT project also holds all the optional tenant configuration under the section &lt;code&gt;.spec.configuration&lt;/code&gt;.&lt;/p&gt;



&lt;p&gt;With the &lt;a href=&quot;https://github.com/ctron/hat&quot; rel=&quot;noreferrer noopener&quot; target=&quot;_blank&quot;&gt;Hono admin tool,&lt;/a&gt;  you can quickly register a new device with your installation (the  documentation will also tell you how to achieve the same with &lt;code&gt;curl&lt;/code&gt;):&lt;/p&gt;



&lt;pre class=&quot;wp-block-code&quot;&gt;&lt;code&gt;# register the new context once with 'hat'
hat context create myapp1 --default-tenant myapp.iot https://$(oc -n messaging-infra get routes device-registry --template='{{ .spec.host }}')

# register a new device and set credentials
hat reg create 4711
hat cred set-password sensor1 sha-512 hono-secret --device 4711&lt;/code&gt;&lt;/pre&gt;



&lt;p&gt;With that, you can simply use Hono as always. First, start the consumer:&lt;/p&gt;



&lt;pre class=&quot;wp-block-code&quot;&gt;&lt;code&gt;# from the hono/cli directory
export MESSAGING_HOST=$(oc -n myapp get addressspace iot -o jsonpath={.status.endpointStatuses[?(@.name==\'messaging\')].externalHost})
export MESSAGING_PORT=443

mvn spring-boot:run -Drun.arguments=--hono.client.host=$MESSAGING_HOST,--hono.client.port=$MESSAGING_PORT,--hono.client.username=consumer,--hono.client.password=foobar,--tenant.id=myapp.iot,--hono.client.trustStorePath=target/config/hono-demo-certs-jar/tls.crt,--message.type=telemetry&lt;/code&gt;&lt;/pre&gt;



&lt;p&gt;And then publish some data to the telemetry channel:&lt;/p&gt;



&lt;pre class=&quot;wp-block-code&quot;&gt;&lt;code&gt;curl -X POST -i -u sensor1@myapp.iot:hono-secret -H 'Content-Type: application/json' --data-binary '{&quot;temp&quot;: 5}' https://$(oc -n enmasse-infra get routes iot-http-adapter --template='{{ .spec.host }}')/telemetry&lt;/code&gt;&lt;/pre&gt;



&lt;p&gt;For more detailed instructions, see: &lt;a href=&quot;https://access.redhat.com/documentation/en-us/red_hat_amq/7.2/html/evaluating_amq_online_on_openshift_container_platform/assembly-iot-messaging&quot; rel=&quot;noreferrer noopener&quot; target=&quot;_blank&quot;&gt;Getting Started with Internet of Things (IoT) on AMQ Online&lt;/a&gt;.&lt;/p&gt;



&lt;h2&gt;IoT integration&lt;/h2&gt;



&lt;p&gt;As mentioned before, you don’t do IoT just for the fun of it (well,  maybe at home, with a Raspberry Pi, Node.js, OpenHAB, and mosquitto).  But when you want to connect millions of devices with your cloud  backend, you want to start working with that data. Using Hono gives you a  pretty simple start. Everything you need is an AMQP 1.0 connectivity.  Assuming you use Apache Camel, pushing telemetry data towards a Kafka  cluster is as easy as (also see &lt;a href=&quot;https://github.com/ctron/hono-example-bridge&quot; rel=&quot;noreferrer noopener&quot; target=&quot;_blank&quot;&gt;ctron/hono-example-bridge&lt;/a&gt;):&lt;/p&gt;



&lt;pre class=&quot;wp-block-code&quot;&gt;&lt;code&gt;&amp;lt;route id=&quot;store&quot;&amp;gt;
  &amp;lt;from uri=&quot;amqp:telemetry/myapp.iot&quot; /&amp;gt;

  &amp;lt;setHeader id=&quot;setKafkaKey&quot; headerName=&quot;kafka.KEY&quot;&amp;gt;
    &amp;lt;simple&amp;gt;${header[device_id]}&amp;lt;/simple&amp;gt;
  &amp;lt;/setHeader&amp;gt;

  &amp;lt;to uri=&quot;kafka:telemetry?brokers={{kafka.brokers}}&quot; /&amp;gt;
&amp;lt;/route&amp;gt;&lt;/code&gt;&lt;/pre&gt;



&lt;p&gt;Bringing together solutions like &lt;a href=&quot;https://www.redhat.com/en/technologies/jboss-middleware/fuse&quot; rel=&quot;noreferrer noopener&quot; target=&quot;_blank&quot;&gt;Red Hat Fuse&lt;/a&gt;, &lt;a href=&quot;https://www.redhat.com/en/technologies/jboss-middleware/amq&quot; rel=&quot;noreferrer noopener&quot; target=&quot;_blank&quot;&gt;AMQ&lt;/a&gt; and &lt;a href=&quot;https://www.redhat.com/en/technologies/jboss-middleware/decision-manager&quot; rel=&quot;noreferrer noopener&quot; target=&quot;_blank&quot;&gt;Decision Manager&lt;/a&gt; makes it a lot easier to give your custom logic in the data center (your value add‑on) access to the Internet of Things.&lt;/p&gt;



&lt;h2&gt;What’s next?&lt;/h2&gt;



&lt;p&gt;AMQ Online 1.1 is the first version to feature IoT as a tech preview. So, give it a try, play with it, but also keep in mind that it is a tech preview.&lt;/p&gt;



&lt;p&gt;In the upstream project EnMasse, we are currently working on creating a scalable, general purpose device registry based on &lt;a href=&quot;https://infinispan.org/&quot; rel=&quot;noreferrer noopener&quot; target=&quot;_blank&quot;&gt;Infinispan&lt;/a&gt;.  Hono itself doesn’t bring a device registry, it only defines the APIs  it requires. However, we think it makes sense to provide a scalable  device registry, out of the box, to get you started. In AMQ Online, that  would then be supported by using &lt;a href=&quot;https://www.redhat.com/en/technologies/jboss-middleware/data-grid&quot; rel=&quot;noreferrer noopener&quot; target=&quot;_blank&quot;&gt;Red Hat Data Grid&lt;/a&gt;.&lt;/p&gt;



&lt;p&gt;In the next months, we hope to also see the release of Eclipse Hono 1.0 and graduate the project from the incubation phase. This is a big step for a project at Eclipse but also the right thing to do. Eclipse Hono is ready, and graduating the project means that we will pay even closer attention to APIs and stability. Still, new features like LoRaWAN, maybe Sigfox, and a proper HTTP API definition for the device registry, are already under development.&lt;/p&gt;



&lt;p&gt;So, there are lots of new features and enhancements that we hope to bring into AMQ Online 1.2.&lt;/p&gt;
&lt;p&gt;The post &lt;a href=&quot;https://dentrassi.de/2019/06/24/bringing-iot-to-red-hat-amq-online/&quot; rel=&quot;nofollow&quot;&gt;Bringing IoT to Red Hat AMQ Online&lt;/a&gt; appeared first on &lt;a href=&quot;https://dentrassi.de&quot; rel=&quot;nofollow&quot;&gt;ctron's blog&lt;/a&gt;.&lt;/p&gt;</description>
	<pubDate>Mon, 24 Jun 2019 07:47:59 +0000</pubDate>
</item>
<item>
	<title>Mike Milinkovich: Eclipse ioFog: Evolving Toward Native Kubernetes Orchestration at the Edge</title>
	<guid isPermaLink="false">http://eclipse-foundation.blog/?p=1500</guid>
	<link>https://eclipse-foundation.blog/2019/06/23/eclipse-iofog-delivering-k8s-at-the-edge/</link>
	<description>&lt;p&gt;With the proliferation of AI, autonomous vehicles, 5G, IoT, and other industrial use cases that require lightning-fast data processing, edge computing has emerged over the past few years as a way to address the limitations of existing cloud architectures to process information and deliver services at the “IoT edge”. Instead of backhauling data to the centralized cloud, edge computing brings computational power closer to data sources to support near real-time insights and local actions while reducing network bandwidth and storage requirements.&lt;/p&gt;
&lt;p&gt;According to &lt;a href=&quot;https://www.gartner.com/smarterwithgartner/what-edge-computing-means-for-infrastructure-and-operations-leaders/&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot;&gt;Gartner&lt;/a&gt;, 75% of enterprise-generated data will be created and processed outside a traditional centralized data center or cloud by 2025. While the problems at the IoT edge — connectivity, manageability, scalability, reliability, security — are being solved as point solutions by enterprises and ecosystem players, there is a need for a foundational industry-wide standard for managing distributed IoT workloads. Time and again, open source has been proven to be the best way to deliver complex platform software with industrial scale collaboration.&lt;/p&gt;
&lt;p&gt;Enter Kubernetes, the de facto standard for orchestrating containers and the applications running inside them. Kubernetes has massive potential for handling IoT workloads on the edge by providing a common control plane across hybrid cloud and edge environments to simplify management and operations. Within the &lt;a href=&quot;https://github.com/kubernetes/community/tree/master/wg-iot-edge&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot;&gt;Kubernetes IoT Edge Working Group&lt;/a&gt;, members of the Kubernetes and Eclipse communities are collaborating with leading technology innovators to extend Kubernetes to support dynamically, securely, and remotely managing edge nodes.&lt;/p&gt;
&lt;p&gt;A great example of this collaboration is Eclipse ioFog, a universal Edge Compute Platform which offers a standardized way to develop and remotely deploy secure microservices to edge computing devices. ioFog can be installed on any hardware running Linux and provides a universal runtime for microservices to dynamically run on the edge. Companies in different vertical markets such as retail, automotive, oil and gas, telco, and healthcare are using ioFog to turn any compute device into an edge software platform.&lt;/p&gt;
&lt;p&gt;The Eclipse Foundation is excited to support today’s announcement of the initial availability of ioFog features that make any Kubernetes distribution edge-aware. With this latest release, developers are able to extend Kubernetes to easily deploy, secure, and manage edge computing networks supporting applications such as advanced AI and machine learning algorithms.&lt;/p&gt;
&lt;p&gt;Farah Papaioannou, co-founder and president of Edgeworx, explains the significance of the release this way:&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;i&gt;“ioFog is a proven platform at the edge. With this release, we build on native Kubernetes, seamlessly extending it to the edge…We do this based on things that actually matter at the edge, such as latency, location or resources. We are delivering today a full cloud-to-edge solution, that’s 100-percent open source and works with any Kubernetes flavors and distros.”&lt;/i&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;These native Kubernetes enhancements are in the process of being contributed to the Eclipse ioFog open source project. We are proud to support the collective efforts of the Eclipse community and the Kubernetes ecosystem to help developers deploy, manage, and orchestrate applications and microservices from cloud to edge in a simple and secure manner.&lt;/p&gt;
&lt;p&gt;For more information about ioFog, get started by using &lt;a href=&quot;https://iofog.org/releases.html&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot;&gt;this link&lt;/a&gt; to install and set up your production ioFog environment. If you have questions or want to connect with other people involved in this platform, join the &lt;a href=&quot;https://discuss.iofog.org/&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot;&gt;ioFog community&lt;/a&gt; and the &lt;a href=&quot;https://accounts.eclipse.org/mailing-list/iofog-dev&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot;&gt;mailing list&lt;/a&gt;.&lt;/p&gt;</description>
	<pubDate>Sun, 23 Jun 2019 20:46:52 +0000</pubDate>
</item>
<item>
	<title>Eclipse Announcements: Become a Sponsor at EclipseCon Europe 2019!</title>
	<guid isPermaLink="true">http://feedproxy.google.com/~r/eclipse/fnews/~3/T421K3DDX_8/become-sponsor-eclipsecon-europe-2019</guid>
	<link>http://feedproxy.google.com/~r/eclipse/fnews/~3/T421K3DDX_8/become-sponsor-eclipsecon-europe-2019</link>
	<description>We're gearing up for EclipseCon Europe 2019, our biggest event of the year which brings together developers, architects, and open source business leaders.&lt;img alt=&quot;&quot; height=&quot;1&quot; src=&quot;http://feeds.feedburner.com/~r/eclipse/fnews/~4/T421K3DDX_8&quot; width=&quot;1&quot; /&gt;</description>
	<pubDate>Fri, 21 Jun 2019 16:00:00 +0000</pubDate>
</item>
<item>
	<title>Eclipse Announcements: Update for Jakarta EE community: June 2019</title>
	<guid isPermaLink="true">http://feedproxy.google.com/~r/eclipse/fnews/~3/Jxl4CGEvroA/update-jakarta-ee-community-june-2019</guid>
	<link>http://feedproxy.google.com/~r/eclipse/fnews/~3/Jxl4CGEvroA/update-jakarta-ee-community-june-2019</link>
	<description>Get the latest monthly email update on the Jakarta EE community from news highlights to various meetings and events related to the platform!&lt;img alt=&quot;&quot; height=&quot;1&quot; src=&quot;http://feeds.feedburner.com/~r/eclipse/fnews/~4/Jxl4CGEvroA&quot; width=&quot;1&quot; /&gt;</description>
	<pubDate>Thu, 20 Jun 2019 17:05:00 +0000</pubDate>
</item>
<item>
	<title>Tanja Obradovic: Update for Jakarta EE community: June 2019</title>
	<guid isPermaLink="false">https://blogs.eclipse.org/6711 at https://blogs.eclipse.org</guid>
	<link>https://blogs.eclipse.org/post/tanja-obradovic/update-jakarta-ee-community-june-2019</link>
	<description>&lt;div class=&quot;field field-name-body field-type-text-with-summary field-label-hidden&quot;&gt;&lt;div class=&quot;field-items&quot;&gt;&lt;div class=&quot;field-item even&quot;&gt;&lt;p dir=&quot;ltr&quot;&gt;Last month, we launched a monthly email update for the Jakarta EE community which seeks to highlight news from various committee meetings related to this platform. We have also decided to publish these updates as blogs and share the information that way as well. There are a few ways to get a grip on the work that has been invested in Jakarta EE so far, so if you’d like to learn more about Jakarta EE-related plans and get involved in shaping the future of cloud native Java, read on.&lt;/p&gt;

&lt;p&gt;Without further ado, let’s have a look at what has happened in May:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Jakarta EE 8 release and progress&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Jakarta EE 8 will be fully compatible with Java EE 8, including use of the javax namespace. The process of driving the Jakarta EE 8 specifications, as well as delivery of the Jakarta EE 8 TCKs, and Jakarta EE 8 compatible implementations will be transparent.&lt;/p&gt;

&lt;p&gt;Mike Milinkovich recently published a FAQ about Jakarta EE 8, in which he offered answers to questions such as  &lt;/p&gt;

&lt;ul&gt;
	&lt;li dir=&quot;ltr&quot;&gt;
	&lt;p dir=&quot;ltr&quot;&gt;Will Jakarta EE 8 break existing Java EE applications that rely upon javax APIs?&lt;/p&gt;
	&lt;/li&gt;
	&lt;li dir=&quot;ltr&quot;&gt;
	&lt;p dir=&quot;ltr&quot;&gt;What will Jakarta EE 8 consist of?&lt;/p&gt;
	&lt;/li&gt;
	&lt;li dir=&quot;ltr&quot;&gt;
	&lt;p dir=&quot;ltr&quot;&gt;Will there be Jakarta EE 8 compatible implementations?&lt;/p&gt;
	&lt;/li&gt;
	&lt;li dir=&quot;ltr&quot;&gt;
	&lt;p dir=&quot;ltr&quot;&gt;What is the process for delivery of Jakarta EE 8&lt;/p&gt;
	&lt;/li&gt;
	&lt;li dir=&quot;ltr&quot;&gt;
	&lt;p dir=&quot;ltr&quot;&gt;When will Jakarta EE 8 be delivered?&lt;/p&gt;
	&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Read Mike’s &lt;a href=&quot;https://eclipse-foundation.blog/2019/05/08/jakarta-ee-8-faq/&quot;&gt;blog&lt;/a&gt; to find out what to expect from the Jakarta EE 8 release.&lt;/p&gt;

&lt;p&gt;We need your help with the work on Jakarta EE 8 release. Project teams please get involved in the &lt;a href=&quot;https://github.com/orgs/eclipse-ee4j/projects&quot;&gt;Eclipse EE4J projects &lt;/a&gt;and help out with  &lt;a href=&quot;https://github.com/orgs/eclipse-ee4j/projects/11&quot;&gt;Jakarta Specification Project Names&lt;/a&gt; and &lt;a href=&quot;https://github.com/orgs/eclipse-ee4j/projects/10&quot;&gt;Jakarta Specification Scope Statements.&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If you’d like to get involved in the work for the &lt;a href=&quot;https://github.com/eclipse-ee4j/jakartaee-platform/projects&quot;&gt;Jakarta EE Platform&lt;/a&gt;, there are a few &lt;a href=&quot;https://github.com/eclipse-ee4j/jakartaee-platform/projects&quot;&gt;projects&lt;/a&gt; that require your attention, namely the Jakarta EE 8 Platform Specification, which is meant to keep track of the work involved with creating the platform specification for Jakarta EE 8, Jakarta EE 9 Platform Specification, intended to keep track of the work involved with creating the platform specification for Jakarta EE 9 and Jakarta EE.Next Roadmap Planning, which seeks to define a roadmap and plan for the Jakarta EE 9 release.&lt;/p&gt;

&lt;p&gt;Right now, the fastest way to have a say in the planning and preparation for the Jakarta EE 9 release is by getting involved in the &lt;a href=&quot;https://github.com/eclipse-ee4j/jakartaee-platform/projects/1&quot;&gt;Jakarta EE.Next Roadmap Planning&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Election schedule for Jakarta EE working group committees&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The various facets of the Jakarta EE Working Group are driven by three key committees for which there are elected positions to be filled: the Steering Committee, the Specification Committee, and the Marketing and Brand Committee. The elected positions are to represent each of the Enterprise Members, Participant Members, and Committer Members. Strategic Members each have a representative appointed to these committees.  &lt;/p&gt;

&lt;p&gt;The Eclipse Foundation is holding elections on behalf of the Jakarta EE Working Group using the following proposed timetable:  &lt;/p&gt;

&lt;p&gt;Nomination period:  May 24 - June 4 (self-nominations are welcome)&lt;/p&gt;

&lt;p dir=&quot;ltr&quot;&gt;Election period:  June 11 - June 25&lt;/p&gt;

&lt;p dir=&quot;ltr&quot;&gt;Winning candidates announced:  June 27&lt;/p&gt;

&lt;p&gt;All members are encouraged to consider nominating someone for the positions, and self-nominations are welcome. The period for nominations runs through June 4th.  Nominations may be sent to elections@eclipse.org.&lt;/p&gt;

&lt;p&gt;Once nominations are closed, all working group members will be informed about the candidates and ballots will be distributed via email to those eligible to vote.  The election process will follow the Eclipse “Single Transferable Vote” method, as defined in the Eclipse&lt;a href=&quot;https://www.eclipse.org/org/documents/&quot;&gt; Bylaws&lt;/a&gt;.  &lt;/p&gt;

&lt;p&gt;The winning candidates will be announced on this mailing list immediately after the elections are concluded.  &lt;/p&gt;

&lt;p&gt;The following positions will be filled as part of this election:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Steering Committee&lt;/strong&gt;&lt;/p&gt;

&lt;p dir=&quot;ltr&quot;&gt;Two seats allocated for Enterprise Members&lt;/p&gt;

&lt;p dir=&quot;ltr&quot;&gt;One seat allocated for Participant Members&lt;/p&gt;

&lt;p dir=&quot;ltr&quot;&gt;One seat allocated for Committer Members&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Specification Committee&lt;/strong&gt;&lt;/p&gt;

&lt;p dir=&quot;ltr&quot;&gt;Two seats allocated for Enterprise Members&lt;/p&gt;

&lt;p dir=&quot;ltr&quot;&gt;One seat allocated for Participant Members&lt;/p&gt;

&lt;p dir=&quot;ltr&quot;&gt;One seat allocated for Committer Members&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Marketing and Brand Committee&lt;/strong&gt;&lt;/p&gt;

&lt;p dir=&quot;ltr&quot;&gt;Two seats allocated for Enterprise Members&lt;/p&gt;

&lt;p dir=&quot;ltr&quot;&gt;One seat allocated for Participant Members&lt;/p&gt;

&lt;p dir=&quot;ltr&quot;&gt;One seat allocated for Committer Members&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Transitioning Jakarta EE to the jakarta namespace&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The process of migrating Java EE to the Eclipse Foundation has been a collaborative effort between the Eclipse Foundation staff and the many contributors, committers, members, and stakeholders that are participating. Last month, it was revealed that the javax package namespace will not be evolved by the Jakarta EE community and that Java trademarks such as the existing specification names will not be used by Jakarta EE specifications. While these restrictions were not what was originally expected, it might be in Jakarta EE’s best interest as the modification of javax would always have involved long-term legal and trademark restrictions.&lt;/p&gt;

&lt;p&gt;In order to evolve Jakarta EE, we must transition to a new namespace. In an effort to bootstrap the conversation, the Jakarta EE Specification Committee has prepared &lt;a href=&quot;https://docs.google.com/document/d/16xHv34J_r7pA5ZsXg3O0eVAZiC12vVkqWnIqWsoUL74/edit&quot;&gt;two proposals&lt;/a&gt; (Big-bang Jakarta EE 9, Jakarta EE 10 new features and incremental change in Jakarta EE 9 and beyond) on how to make the move into the new namespace smoother. These proposals represent a starting point, but the community is warmly invited to submit more proposals.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://accounts.eclipse.org/mailing-list/jakartaee-platform-dev&quot;&gt;Community discussion&lt;/a&gt; on how to transition to the jakarta namespace concluded Sunday, June 9th, 2019.&lt;/p&gt;

&lt;p&gt;We invite you to read a few blogs on this topic:&lt;/p&gt;

&lt;ul&gt;
	&lt;li dir=&quot;ltr&quot;&gt;
	&lt;p dir=&quot;ltr&quot;&gt;&lt;a href=&quot;https://eclipse-foundation.blog/2019/05/03/jakarta-ee-java-trademarks/&quot;&gt;Mike Milinkovich’s blog &lt;/a&gt;&lt;/p&gt;
	&lt;/li&gt;
	&lt;li dir=&quot;ltr&quot;&gt;
	&lt;p dir=&quot;ltr&quot;&gt;&lt;a href=&quot;http://adambien.blog/roller/abien/entry/java_ee_jakarta_ee_and&quot;&gt;Adam Bien’s blog&lt;/a&gt;&lt;/p&gt;
	&lt;/li&gt;
	&lt;li dir=&quot;ltr&quot;&gt;
	&lt;p dir=&quot;ltr&quot;&gt;&lt;a href=&quot;https://dmitrykornilov.net/2019/05/03/thoughts-about-jakarta-ee-future-without-javax/&quot;&gt;Dmitry Kornilov’s blog&lt;/a&gt;&lt;/p&gt;
	&lt;/li&gt;
	&lt;li dir=&quot;ltr&quot;&gt;
	&lt;p dir=&quot;ltr&quot;&gt;&lt;a href=&quot;https://www.agilejava.eu/2019/05/07/transitioning-jakarta-ee-to-the-jakarta-namespace/&quot;&gt;Ivar Grimstad’s blog&lt;/a&gt;&lt;/p&gt;
	&lt;/li&gt;
	&lt;li dir=&quot;ltr&quot;&gt;
	&lt;p dir=&quot;ltr&quot;&gt;&lt;a href=&quot;http://londonjavacommunity.co.uk/java-ee-to-jakarta-ee-and-the-javax-trademark-decision/&quot;&gt;Martijn Verburg’s blog&lt;/a&gt;&lt;/p&gt;
	&lt;/li&gt;
	&lt;li dir=&quot;ltr&quot;&gt;
	&lt;p dir=&quot;ltr&quot;&gt;&lt;a href=&quot;https://www.javacodegeeks.com/2019/05/jakarta-ee-clean-slate.html&quot;&gt;Alex Theedom’s blog&lt;/a&gt;&lt;/p&gt;
	&lt;/li&gt;
	&lt;li dir=&quot;ltr&quot;&gt;
	&lt;p dir=&quot;ltr&quot;&gt;&lt;a href=&quot;https://blog.payara.fish/jakarta-ee-8-and-beyond&quot;&gt;Steve Millidge’s blog&lt;/a&gt;&lt;/p&gt;
	&lt;/li&gt;
	&lt;li dir=&quot;ltr&quot;&gt;
	&lt;p dir=&quot;ltr&quot;&gt;&lt;a href=&quot;https://www.tomitribe.com/blog/jakarta-ee-a-new-hope/&quot;&gt;David Blevins’ blog&lt;/a&gt;&lt;/p&gt;
	&lt;/li&gt;
	&lt;li dir=&quot;ltr&quot;&gt;
	&lt;p dir=&quot;ltr&quot;&gt;&lt;a href=&quot;https://openliberty.io/blog/2019/05/08/jakarta-ee-naming.html&quot;&gt;Alasdair Nottingham’s blog&lt;/a&gt;&lt;/p&gt;
	&lt;/li&gt;
	&lt;li dir=&quot;ltr&quot;&gt;
	&lt;p dir=&quot;ltr&quot;&gt;&lt;a href=&quot;https://blog.sebastian-daschner.com/entries/thoughts-on-jakarta-package-name&quot;&gt;Sebastian Daschner’s blog&lt;/a&gt;&lt;/p&gt;
	&lt;/li&gt;
	&lt;li dir=&quot;ltr&quot;&gt;
	&lt;p dir=&quot;ltr&quot;&gt;&lt;a href=&quot;https://struberg.wordpress.com/2019/05/06/the-way-forward-for-jakartaee-packages/&quot;&gt;Mark Struberg’s blog&lt;/a&gt;&lt;/p&gt;
	&lt;/li&gt;
	&lt;li dir=&quot;ltr&quot;&gt;
	&lt;p dir=&quot;ltr&quot;&gt;&lt;a href=&quot;https://www.youtube.com/watch?time_continue=1&amp;amp;v=jSyamH1JYuI&quot;&gt;Tanja Obradovic’s interview at JAX 2019&lt;/a&gt;&lt;/p&gt;
	&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;2019 Jakarta EE Developer Survey Results&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The Eclipse Foundation recently released the results of the &lt;a href=&quot;https://jakarta.ee/documents/insights/2019-jakarta-ee-developer-survey.pdf&quot;&gt;2019 Jakarta EE developer survey&lt;/a&gt; that canvassed nearly 1,800 Java developers about trends in enterprise Java programming and their adoption of cloud native technologies. The aim of the survey, which was conducted by the Foundation in March of 2019 in cooperation with member companies and partners, including the London Java Community and Java User Groups, was to help Java ecosystem stakeholders better understand the requirements, priorities, and perceptions of enterprise Java developer communities.&lt;/p&gt;

&lt;p&gt;A third of developers surveyed are currently building cloud native architectures and another 30 percent are planning to within the next year. Furthermore, the number of Java applications running in the cloud is expected to increase significantly over the next two years, with 32 percent of respondents hoping to run nearly two-thirds of their Java applications in the cloud in two years’ time. Also, over 40 percent of respondents are using the microservices architecture to implement Java in the cloud.&lt;/p&gt;

&lt;p&gt;Access the full findings of the 2019 Java Community Developer Survey &lt;a href=&quot;https://jakarta.ee/documents/insights/2019-jakarta-ee-developer-survey.pdf&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Community engagement&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The Jakarta EE community promises to be a very active one, especially given the various channels that can be used to stay up-to-date with all the latest and greatest. Tanja Obradovic’s &lt;a href=&quot;https://blogs.eclipse.org/post/tanja-obradovic/jakarta-ee-community-engagement&quot;&gt;blog&lt;/a&gt; offers a sneak peek at the community engagement plan, which includes&lt;/p&gt;

&lt;ul&gt;
	&lt;li dir=&quot;ltr&quot;&gt;
	&lt;p dir=&quot;ltr&quot;&gt;Social media: &lt;a href=&quot;https://twitter.com/jakartaee&quot;&gt;Twitter&lt;/a&gt;, &lt;a href=&quot;https://www.facebook.com/JakartaEE/&quot;&gt;Facebook&lt;/a&gt;, &lt;a href=&quot;https://www.linkedin.com/groups/13597511/&quot;&gt;LinkedIn Group&lt;/a&gt;&lt;/p&gt;
	&lt;/li&gt;
	&lt;li dir=&quot;ltr&quot;&gt;
	&lt;p dir=&quot;ltr&quot;&gt;Mailing lists: subscribe to the following mailing lists: &lt;a href=&quot;mailto:jakarta.ee-community@eclipse.org&quot;&gt;jakarta.ee-community@eclipse.org&lt;/a&gt; &amp;amp; &lt;a href=&quot;mailto:jakarta.ee-wg@eclipse.org&quot;&gt;jakarta.ee-wg@eclipse.org&lt;/a&gt;&lt;/p&gt;
	&lt;/li&gt;
	&lt;li dir=&quot;ltr&quot;&gt;
	&lt;p dir=&quot;ltr&quot;&gt;Newsletter / Blogs / emails: &lt;a href=&quot;https://www.eclipse.org/community/eclipse_newsletter/&quot;&gt;Eclipse Newsletter&lt;/a&gt;, &lt;a href=&quot;https://jakartablogs.ee/&quot;&gt;Jakarta Blogs&lt;/a&gt;, monthly update emails to &lt;a href=&quot;mailto:jakarta.ee-community@eclipse.org&quot;&gt;jakarta.ee-community@eclipse.org&lt;/a&gt; and community blogs on &lt;a href=&quot;https://docs.google.com/spreadsheets/d/1JflN_xJ9d5ZWu5VUbDV9Spj7mc8WuPGMfd6EZgabXz0/edit#gid=0&quot;&gt;“how are you involved with Jakarta EE” &lt;/a&gt;&lt;/p&gt;
	&lt;/li&gt;
	&lt;li dir=&quot;ltr&quot;&gt;
	&lt;p dir=&quot;ltr&quot;&gt;Meetings: &lt;a href=&quot;https://www.meetup.com/jakartatechtalks_/&quot;&gt;Jakarta Tech Talks&lt;/a&gt;, &lt;a href=&quot;https://calendar.google.com/calendar/embed?src=eclipse-foundation.org_3281qms6riu4kdf354jn5idon0%40group.calendar.google.com&amp;amp;ctz=America%2FToronto&quot;&gt;Jakarta EE Update&lt;/a&gt;, Jakarta Town Hall, EF organized Events and Conferences, JakartaOne Livestream, &lt;a href=&quot;https://www.eclipsecon.org/europe2019&quot;&gt;EclipseCon Europe&lt;/a&gt;&lt;/p&gt;
	&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;For more information about community engagement, read Tanja Obradovic’s &lt;a href=&quot;https://blogs.eclipse.org/post/tanja-obradovic/jakarta-ee-community-engagement&quot;&gt;blog&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Jakarta EE Wiki&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Have you checked out the &lt;a href=&quot;https://wiki.eclipse.org/Jakarta_EE&quot;&gt;Jakarta EE Wiki&lt;/a&gt; yet? It includes important information such as process guidelines, documentation, Eclipse guides and mailing lists, Jakarta EE Working Group essentials and more.  &lt;/p&gt;

&lt;p&gt;Keep in mind that this page is a work in progress and is expected to evolve in the upcoming weeks and months. The community’s input and suggestions are welcome and appreciated!&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Jakarta EE Community Update: May video call&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The most recent Jakarta EE Community Update meeting took place in May; the conversation included topics such as the Jakarta EE progress so far, Jakarta EE Rights to Java Trademarks, the transition from javax namespace to the jakarta namespace (mapping javax to jakarta, when repackaging is required and when migration to namespaces is not required) and how to maximize compatibility with Java EE 8 and Jakarta EE for future versions without stifling innovation, the Jakarta EE 8 release, PMC/ Projects update and more.&lt;/p&gt;

&lt;p&gt;The minutes of the Jakarta EE community update meeting are available &lt;a href=&quot;https://docs.google.com/document/d/1TH_p_m-z3v9HZyhgwW41JzXWTFIwrClGLaSDIy0Sf5w/edit&quot;&gt;here&lt;/a&gt; and the recorded Zoom video conversation can be found &lt;a href=&quot;https://www.youtube.com/watch?v=bCK3kRiYz-o&amp;amp;feature=youtu.be&quot;&gt;here&lt;/a&gt;.  &lt;/p&gt;

&lt;p dir=&quot;ltr&quot;&gt;&lt;strong&gt;Jakarta EE presence at conferences: May overview&lt;/strong&gt;&lt;/p&gt;

&lt;p dir=&quot;ltr&quot;&gt;Cloud native was the talk of the town in May. Conferences such as &lt;a href=&quot;https://jax.de/en/&quot;&gt;JAX 2019&lt;/a&gt;,&lt;a href=&quot;https://www.redhat.com/en/summit/2019&quot;&gt; Red Hat Summit 2019&lt;/a&gt; and &lt;a href=&quot;https://events.linuxfoundation.org/events/kubecon-cloudnativecon-europe-2019/&quot;&gt;KubeCon + CloudNativeCon Europe 2019&lt;/a&gt; were all about cloud native and how to tap into this key approach for IT modernization success and the Eclipse Foundation was there to take a pulse of the community to better understand the adoption of cloud native technologies.&lt;/p&gt;

&lt;p&gt;Don’t forget to check out Tanja Obradovic’s &lt;a href=&quot;https://www.youtube.com/watch?time_continue=1&amp;amp;v=jSyamH1JYuI&quot;&gt;video interview&lt;/a&gt; about the future of Jakarta EE at JAX 2019.  &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://www.eclipsecon.org/europe2019&quot;&gt;EclipseCon Europe 2019&lt;/a&gt;: Call for Papers open until July 15&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;It’s that time of year again! You can now submit your proposals to be part of EclipseCon Europe 2019’s speaker lineup. The conference takes place in Ludwigsburg, Germany on October 21 - 24, 2019. Early bird submissions are due July 1, and the final deadline is July 15. Check out &lt;a href=&quot;https://blogs.eclipse.org/post/jameka-woodberry/eclipsecon-europe-2019-call-papers-open-until-july-15-submit-talk-today&quot;&gt;Jameka's blog&lt;/a&gt; and &lt;a href=&quot;https://www.eclipsecon.org/europe2019/cfp&quot;&gt;submit&lt;/a&gt; your talk today!&lt;/p&gt;

&lt;p&gt;We are also working on&lt;strong&gt; &lt;a href=&quot;http://jakartaone.org&quot;&gt;JakartaOne Livestream conference&lt;/a&gt;, &lt;/strong&gt;scheduled for September 10th&lt;strong&gt;. Call for Papers are open until July 1st&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Thank you for your interest in Jakarta EE. Help steer Jakarta EE toward its exciting future by subscribing to the &lt;a href=&quot;https://www.globenewswire.com/Tracker?data=0tSsQkMPqlAqlO58_0kVZUNJvuApIvPd9ayj0AoAaLggLeHBBrGJlAx-F0VJJtTwdnpi0CXR-1YRnE0ETgmQeRHNh2sqtFxkPMsi-Ulu_yk=&quot;&gt;jakarta.ee-wg@eclipse.org&lt;/a&gt; mailing list and by joining the Jakarta EE Working Group.&lt;/p&gt;

&lt;p&gt;To learn more about the collaborative efforts to build tomorrow’s enterprise Java platform for the cloud, check out the &lt;a href=&quot;https://jakartablogs.ee/&quot;&gt;Jakarta Blogs&lt;/a&gt; and participate in the monthly &lt;a href=&quot;https://www.meetup.com/jakartatechtalks_/&quot;&gt;Jakarta Tech Talks&lt;/a&gt;. Don’t forget to subscribe to the Eclipse &lt;a href=&quot;https://www.eclipse.org/community/eclipse_newsletter/&quot;&gt;newsletter&lt;/a&gt;!  &lt;/p&gt;
&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;field field-name-field-blog-tags field-type-taxonomy-term-reference field-label-above&quot;&gt;&lt;div class=&quot;field-label&quot;&gt;Tags: &lt;/div&gt;&lt;div class=&quot;field-items&quot;&gt;&lt;div class=&quot;field-item even&quot;&gt;&lt;a href=&quot;https://blogs.eclipse.org/blog-tags/jakartaee-javaee-java-eclipsefdn&quot;&gt;#JakartaEE #JavaEE #Java #EclipseFdn&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;</description>
	<pubDate>Thu, 20 Jun 2019 14:01:59 +0000</pubDate>
</item>
<item>
	<title>Vladimir Piskarev: Eclipse Handly 1.2 Released</title>
	<guid isPermaLink="false">http://pisv.wordpress.com/?p=703</guid>
	<link>https://pisv.wordpress.com/2019/06/19/eclipse-handly-1-2-released/</link>
	<description>&lt;p&gt;Eclipse &lt;a href=&quot;https://www.eclipse.org/handly&quot;&gt;Handly&lt;/a&gt; &lt;a href=&quot;https://projects.eclipse.org/projects/technology.handly/releases/1.2&quot;&gt;1.2&lt;/a&gt; has just been released. This release is focused on further enhancements to UI components. Particularly, it provides a framework for creating a full-featured Call Hierarchy view.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://wiki.eclipse.org/Handly/New_and_Noteworthy/1.2&quot;&gt;New and Noteworthy&lt;/a&gt;&lt;br /&gt;
&lt;a href=&quot;https://wiki.eclipse.org/Handly/Migration/1.2&quot;&gt;Migration Guide&lt;/a&gt;&lt;br /&gt;
&lt;a href=&quot;https://projects.eclipse.org/projects/technology.handly/downloads&quot;&gt;Downloads&lt;/a&gt;&lt;/p&gt;</description>
	<pubDate>Wed, 19 Jun 2019 18:50:18 +0000</pubDate>
</item>
<item>
	<title>Webtools News: WTP 3.14 Released!</title>
	<guid isPermaLink="false">http://www.eclipse.org/webtools/news.php#permalink188</guid>
	<link>http://eclipse.org/webtools/releases/3.14</link>
	<description>&lt;div&gt;
		The Eclipse Web Tools Platform 3.14 has been released!
		&lt;a href=&quot;https://wiki.eclipse.org/WTP_FAQ#How_do_I_install_WTP.3F&quot;&gt;Installation&lt;/a&gt;
		and updates can be performed using the
		Eclipse IDE 2019-06
		&lt;a href=&quot;http://download.eclipse.org/releases/2019-06/&quot;&gt;Update Site&lt;/a&gt;
		or through the
		&lt;a href=&quot;https://marketplace.eclipse.org/user/nitind/listings&quot;&gt;Eclipse Marketplace&lt;/a&gt;
		.
		Release 3.14 is included in the 2019-06
		&lt;a href=&quot;https://www.eclipse.org/downloads/packages/release/2019-06/r/eclipse-ide-enterprise-java-developers&quot;&gt;
			Eclipse IDE for Enterprise Java Developers
		&lt;/a&gt;
		, with selected portions also included in 9
		&lt;a href=&quot;http://www.eclipse.org/downloads/compare.php&quot;&gt;other packages&lt;/a&gt;
		. Adopters can download
		&lt;a href=&quot;http://download.eclipse.org/webtools/downloads/&quot;&gt;the R3.14 update site itself&lt;/a&gt;
		directly and combine it with the necessary dependencies.&lt;/div&gt;&lt;p&gt;&lt;a href=&quot;http://www.eclipse.org/webtools/news.php#permalink188&quot;&gt;More news&lt;/a&gt;&lt;/p&gt;</description>
	<pubDate>Wed, 19 Jun 2019 15:14:59 +0000</pubDate>
</item>
<item>
	<title>itemis: Xtext 2.18 – released!</title>
	<guid isPermaLink="true">https://blogs.itemis.com/en/xtext-2.18-released</guid>
	<link>https://blogs.itemis.com/en/xtext-2.18-released</link>
	<description>&lt;p&gt;The team around project lead Christian Dietrich has released version 2.18 of Xtext and Xtend. This version is also the one that enters the Eclipse release train number 2019-06, departing on time at June 19th. &lt;/p&gt; 
&lt;p&gt;More than 40 helping hands have made this Xtext release possible over the last quarter. A big shout-out especially to the first-time contributors! We are thankful for every reported issue, comment to a discussion, and proposed patch.&lt;/p&gt; 
&lt;p&gt;Even though the &lt;strong&gt;main focus&lt;/strong&gt; was on &lt;strong&gt;stability and robustness&lt;/strong&gt;, a couple of &lt;strong&gt;new features&lt;/strong&gt; have been made available, too.&lt;/p&gt; 
&lt;p&gt; &lt;/p&gt; 
&lt;h2&gt;Playing catch-up with Java&lt;/h2&gt; 
&lt;p&gt;Xtend eventually learned to understand the ternary expression and got support for try-with-resources. While the former is just expressing a matter of taste, being able to efficiently deal with closable resources is a big win. Forgetting to close a stream or a connection is just a little harder when you can benefit from the compiler auto-closing the thing. This is also available in legacy scenarios where code is still required to run on ancient Java versions.&lt;/p&gt; 
&lt;p&gt;Both features were implemented by &lt;em&gt;&lt;a href=&quot;https://hosting.itemis.de/author/eva-p%C3%B6ll&quot; title=&quot;Learn more about Eva Poell&quot;&gt;Eva Poell&lt;/a&gt;&lt;/em&gt;, intern for 6 weeks at our Berlin office. We are thankful for her great work!&lt;/p&gt; 
&lt;h2&gt;Improved “find references” view&lt;/h2&gt; 
&lt;p&gt;When exploring a code base, software engineers navigate back and forth through the source, especially between references and declarations. If you want to take notes on the usage of a DSL concept, you can copy it directly from the “search results” page. Also, if you only want to deal with a subset of the results, it’s now possible to remove matches from the view.&lt;/p&gt; 
&lt;p&gt; &lt;/p&gt; 
&lt;p&gt;&lt;img alt=&quot;Improved Find References View&quot; src=&quot;https://blogs.itemis.com/hs-fs/hubfs/Blog%20(2019)/Software%20Development/Xext%202.18%20Released/Improved%20Find%20References%20View.png?width=1096&amp;amp;name=Improved%20Find%20References%20View.png&quot; style=&quot;width: 1096px;&quot; width=&quot;1096&quot; /&gt;&lt;/p&gt; 
&lt;h2&gt;New quick fixes for the Xtext grammar&lt;/h2&gt; 
&lt;p&gt;The Xtext grammar editor received some love in this release cycle, too. The validation problems around invalid empty keywords can be automatically fixed from now on. Either a reasonable default is inserted, or the keyword is removed – it’s your call.&lt;/p&gt; 
&lt;p&gt;&lt;img alt=&quot;Xtext Grammar Editor&quot; src=&quot;https://blogs.itemis.com/hs-fs/hubfs/Blog%20(2019)/Software%20Development/Xext%202.18%20Released/Xtext%20Grammar%20Editor.png?width=694&amp;amp;name=Xtext%20Grammar%20Editor.png&quot; style=&quot;width: 694px;&quot; width=&quot;694&quot; /&gt;&lt;/p&gt; 
&lt;h2&gt;Rename refactoring&lt;/h2&gt; Long-running rename operations can now be cancelled by the user. Instead of waiting for the computation to finish and reverting the outcome, accidentally triggered renames are no longer a painful experience. 
&lt;h2&gt;Rename class quick fix&lt;/h2&gt; Talking about renames: Even though Xtend allows to define as many public types per file as you want, it is a common usage pattern to have a single top-level class per file. If names get out of sync because of a change of mind, a quick fix is offered to align the two of them. If you decide to rename the type, a proper rename operation is triggered, and all the references are updated along with the declaration. 
&lt;h2&gt;Language server fixes&lt;/h2&gt; The Xtext support for the Language Server Protocol has been improved in different areas. Extension implementations do now have access to the indexed resources, and the reporting of build results was fixed. Formerly, some notifications may have got lost such that the editors did not get any events about completed builds. The communication in the other direction was fixed, too. Sometimes the server did miss a couple of changed resources, thus its index information diverged from the code on disk. 
&lt;h2&gt;Eclipse robustness&lt;/h2&gt; A few rarely-occurring issues around the startup of Eclipse and the processing of deleted projects have been fixed. It did not happen often, but if you were bitten by that bug, it was rather annoying. These issues have been resolved. 
&lt;h2&gt;Your turn&lt;/h2&gt; The team is proud of the achievements in this release cycle. But we are also eager to know what your thoughts on this are. If you are missing a certain feature or do have suggestions how to improve Xtext or Xtend, just drop us a note and we are happy to discuss your ideas.  
&lt;img alt=&quot;&quot; height=&quot;1&quot; src=&quot;https://track.hubspot.com/__ptq.gif?a=761475&amp;amp;k=14&amp;amp;r=https%3A%2F%2Fblogs.itemis.com%2Fen%2Fxtext-2.18-released&amp;amp;bu=https%253A%252F%252Fblogs.itemis.com&amp;amp;bvt=rss&quot; style=&quot;width: 1px!important;&quot; width=&quot;1&quot; /&gt;</description>
	<pubDate>Tue, 18 Jun 2019 10:31:03 +0000</pubDate>
	<author>sebastian.zarnekow@itemis.de (Sebastian Zarnekow)</author>
</item>
<item>
	<title>Tanja Obradovic: JCP Copyright Licensing request</title>
	<guid isPermaLink="false">https://blogs.eclipse.org/6709 at https://blogs.eclipse.org</guid>
	<link>https://blogs.eclipse.org/post/tanja-obradovic/jcp-copyright-licensing-request</link>
	<description>&lt;div class=&quot;field field-name-body field-type-text-with-summary field-label-hidden&quot;&gt;&lt;div class=&quot;field-items&quot;&gt;&lt;div class=&quot;field-item even&quot;&gt;&lt;p dir=&quot;ltr&quot;&gt;The open source community has welcomed Oracle’s contribution of Java EE into Eclipse Foundation, under the new name Jakarta EE. As part of this huge effort and transfer, we want to ensure that we have the necessary rights so we can evolve the specifications under the new  &lt;a href=&quot;https://jakarta.ee/about/jesp/&quot;&gt;Jakarta EE Specification Process&lt;/a&gt;. For this, we need your help!&lt;/p&gt;

&lt;p&gt;We must request copyright licenses from all past contributors to Java EE specifications under the &lt;a href=&quot;http://jcp.org&quot;&gt;JCP&lt;/a&gt;. Hence, we are reaching out to all companies and individuals who made contributions to Java EE in the past to help out, execute the agreements and return them back to Eclipse Foundation. As the advancement of the specifications and the technology is in question, we would greatly appreciate your prompt response. Oracle, Red Hat, IBM, and many others in the community have already signed an agreement to license their contributions to Java EE specifications to the Eclipse Foundation. We are also counting on the JCP community to be supportive of this request.&lt;/p&gt;

&lt;p&gt;The request is for JCP contributors to Java EE specifications, once you receive an email from the Eclipse Foundation regarding this, please get back to us as soon as you can!&lt;/p&gt;

&lt;p&gt;Should you have any questions regarding the request for copyright licenses from all past contributors, please contact &lt;a href=&quot;mailto:mariateresa.delgado@eclipse-foundation.org&quot;&gt;mariateresa.delgado@eclipse-foundation.org&lt;/a&gt; who is leading us all through this process.&lt;/p&gt;

&lt;p&gt;Many thanks!&lt;/p&gt;
&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;field field-name-field-blog-tags field-type-taxonomy-term-reference field-label-above&quot;&gt;&lt;div class=&quot;field-label&quot;&gt;Tags: &lt;/div&gt;&lt;div class=&quot;field-items&quot;&gt;&lt;div class=&quot;field-item even&quot;&gt;&lt;a href=&quot;https://blogs.eclipse.org/blog-tags/jakartaee-javaee-java-eclipsefdn&quot;&gt;#JakartaEE #JavaEE #Java #EclipseFdn&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;</description>
	<pubDate>Mon, 17 Jun 2019 18:20:19 +0000</pubDate>
</item>
<item>
	<title>Eclipse Announcements: Eclipse Individual Committer Agreement 4.0 Update</title>
	<guid isPermaLink="true">http://feedproxy.google.com/~r/eclipse/fnews/~3/0r6S9dYfa14/eclipse-individual-committer-agreement-40-update</guid>
	<link>http://feedproxy.google.com/~r/eclipse/fnews/~3/0r6S9dYfa14/eclipse-individual-committer-agreement-40-update</link>
	<description>On June 13th, we retired all versions of the  Eclipse Individual Committer Agreement (ICA) prior to version 4.0. Update yours today!&lt;img alt=&quot;&quot; height=&quot;1&quot; src=&quot;http://feeds.feedburner.com/~r/eclipse/fnews/~4/0r6S9dYfa14&quot; width=&quot;1&quot; /&gt;</description>
	<pubDate>Mon, 17 Jun 2019 14:05:00 +0000</pubDate>
</item>
<item>
	<title>InfoQ Eclipse feed: Eclipse Introduces New IDE-Agnostic Tools for Building and Deploying Cloud-Native Applications</title>
	<guid isPermaLink="true">https://www.infoq.com/news/2019/06/eclipse-codewind?utm_campaign=infoq_content&amp;utm_source=infoq&amp;utm_medium=feed&amp;utm_term=Eclipse</guid>
	<link>https://www.infoq.com/news/2019/06/eclipse-codewind?utm_campaign=infoq_content&amp;utm_source=infoq&amp;utm_medium=feed&amp;utm_term=Eclipse</link>
	<description>&lt;img src=&quot;https://www.infoq.com/styles/i/logo_bigger.jpg&quot; /&gt;&lt;p&gt;Eclipse Codewind is a new developer-centric project from the Eclipse Foundation that aims to assist developers by providing ways to quickly and consistently accomplish tasks that are common to cloud-native application development.&lt;/p&gt; &lt;i&gt;By Dustin Schultz&lt;/i&gt;</description>
	<pubDate>Mon, 17 Jun 2019 05:35:00 +0000</pubDate>
</item>
<item>
	<title>Lorenzo Bettini: My new book on TDD, Build Automation and Continuous Integration</title>
	<guid isPermaLink="false">http://www.lorenzobettini.it/?p=1179</guid>
	<link>http://www.lorenzobettini.it/2019/06/my-new-book-on-tdd-build-automation-and-continuous-integration/</link>
	<description>&lt;p&gt;I haven’t been blogging for some time now. I’m getting back to blogging by announcing my new book on TDD (Test-Driven Development), Build Automation and Continuous Integration.&lt;/p&gt;



&lt;p&gt;The title is indeed, “&lt;strong&gt;Test-Driven Development, Build Automation, Continuous Integration&lt;br /&gt; (with Java, Eclipse and friends)&lt;/strong&gt;” and can be bought from &lt;a href=&quot;https://leanpub.com/tdd-buildautomation-ci&quot; rel=&quot;noreferrer noopener&quot; target=&quot;_blank&quot;&gt;https://leanpub.com/tdd-buildautomation-ci&lt;/a&gt;.&lt;/p&gt;



&lt;p&gt;The main goal of the book is to get you started with Test-Driven Development (write tests before the code), Build Automation (make the overall process of compilation and testing automatic with Maven) and Continuous Integration (commit changes and a server will perform the whole build of your code). Using Java, Eclipse and their ecosystems.&lt;/p&gt;



&lt;p&gt;The main subject of this book is software testing. The main premise is that testing is a crucial part of software development. You need to make sure that the software you write behaves correctly. You can manually test your software. However, manual tests require lots of manual work and it is error prone.&lt;/p&gt;



&lt;p&gt;On the contrary, this book focuses on automated tests, which can be done at several levels. In the book we will see a few types of tests, starting from those that test a single component in isolation to those that test the entire application. We will also deal with tests in the presence of a database and with tests that verify the correct behavior of the graphical user interface.&lt;/p&gt;



&lt;p&gt;In particular, we will describe and apply the Test-Driven Development methodology, writing tests before the actual code.&lt;/p&gt;



&lt;p&gt;Throughout the book we will use Java as the main programming language. We use Eclipse as the IDE. Both Java and Eclipse have a huge ecosystem of “friends”, that is, frameworks, tools and plugins. Many of them are related to automated tests and perfectly fit the goals of the book. We will use JUnit throughout the book as the main Java testing framework.&lt;/p&gt;



&lt;p&gt;it is also important to be able to completely automate the build process. In fact, another relevant subject of the book is Build Automation. We will use one of the mainstream tools for build automation in the Java world, Maven.&lt;/p&gt;



&lt;p&gt;We will use Git as the Version Control System and GitHub as the hosting service for our Git repositories. We will then connect our code hosted on GitHub with a cloud platform for Continuous Integration. In particular, we will use Travis CI. With the Continuous Integration process, we will implement a workflow where each time we commit a change in our Git repository, the CI server will automatically run the automated build process, compiling all the code, running all the tests and possibly create additional reports concerning the quality of our code and of our tests.&lt;/p&gt;



&lt;p&gt;The code quality of tests can be measured in terms of a few metrics using code coverage and mutation testing. Other metrics are based on static analysis mechanisms, inspecting the code in search of bugs, code smells and vulnerabilities. For such a static analysis we will use SonarQube and its free cloud version SonarCloud.&lt;/p&gt;



&lt;p&gt;When we need our application to connect to a service like a database, we will use Docker a virtualization program, based on containers, that is much more lightweight than standard virtual machines. Docker will allow us to&lt;/p&gt;



&lt;p&gt;configure the needed services in advance, once and for all, so that the services running in the containers will take part in the reproducibility of the whole build infrastructure. The same configuration of the services will be used in our development environment, during build automation and in the CI server.&lt;/p&gt;



&lt;p&gt;Most of the chapters have a “tutorial” nature. Besides a few general explanations of the main concepts, the chapters will show lots of code. It should be straightforward to follow the chapters and write the code to reproduce the examples. All the sources of the examples are available on GitHub.&lt;/p&gt;



&lt;p&gt;The main goal of the book is to give the basic concepts of the techniques and tools for testing, build automation and continuous integration. Of course, the descriptions of these concepts you find in this book are far from being exhaustive. However, you should get enough information to get started with all the presented techniques and tools.&lt;/p&gt;



&lt;p&gt;I hope you enjoy the book &lt;img alt=&quot;🙂&quot; class=&quot;wp-smiley&quot; src=&quot;https://s.w.org/images/core/emoji/12.0.0-1/72x72/1f642.png&quot; style=&quot;height: 1em;&quot; /&gt;&lt;/p&gt;



&lt;p&gt;&lt;/p&gt;



&lt;p&gt; &lt;/p&gt;</description>
	<pubDate>Wed, 12 Jun 2019 16:59:24 +0000</pubDate>
</item>
<item>
	<title>JBoss Tools Team: JBoss Tools 4.12.0.AM1 for Eclipse 2019-06</title>
	<guid isPermaLink="true">https://tools.jboss.org/blog/4.12.0.am1.html</guid>
	<link>https://tools.jboss.org/blog/4.12.0.am1.html</link>
	<description>&lt;div&gt;&lt;div id=&quot;preamble&quot;&gt;
      &lt;div class=&quot;sectionbody&quot;&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Happy to announce 4.12.0.AM1 (Developer Milestone 1) build for Eclipse 2019-06.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Downloads available at &lt;a href=&quot;https://tools.jboss.org/downloads/jbosstools/2019-06/4.12.0.AM1.html&quot;&gt;JBoss Tools 4.12.0 AM1&lt;/a&gt;.&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect1&quot;&gt;
      &lt;h2 id=&quot;what-is-new&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;http://tools.jboss.org/blog/news.atom#what-is-new&quot;&gt;&lt;/a&gt;What is New?&lt;/h2&gt;
      &lt;div class=&quot;sectionbody&quot;&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Full info is at &lt;a href=&quot;https://tools.jboss.org/documentation/whatsnew/jbosstools/4.12.0.AM1.html&quot;&gt;this page&lt;/a&gt;. Some highlights are below.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect2&quot;&gt;
      &lt;h3 id=&quot;server-tools&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;http://tools.jboss.org/blog/news.atom#server-tools&quot;&gt;&lt;/a&gt;Server Tools&lt;/h3&gt;
      &lt;div class=&quot;sect3&quot;&gt;
      &lt;h4 id=&quot;wildfly-17-server-adapter&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;http://tools.jboss.org/blog/news.atom#wildfly-17-server-adapter&quot;&gt;&lt;/a&gt;Wildfly 17 Server Adapter&lt;/h4&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;A server adapter has been added to work with Wildfly 17. It adds support for Java EE 8.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Enjoy!&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Jeff Maury&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;&lt;/div&gt;</description>
	<pubDate>Wed, 12 Jun 2019 11:05:17 +0000</pubDate>
</item>
<item>
	<title>Karsten Thoms: Eclipse Tycho: Disable p2 dependency resolution with tycho.mode=maven</title>
	<guid isPermaLink="false">http://kthoms.wordpress.com/?p=1023</guid>
	<link>https://kthoms.wordpress.com/2019/06/12/eclipse-tycho-disable-p2-dependency-resolution-with-tycho-modemaven/</link>
	<description>&lt;p&gt;In Eclipse Tycho based builds the first step is always computation of the target platform and depedency resolution. This takes quite some time and in certain use cases it is not necessary. Typical use cases are updating versions with the &lt;a href=&quot;https://www.eclipse.org/tycho/sitedocs/tycho-release/tycho-versions-plugin/set-version-mojo.html&quot;&gt;tycho-versions-plugin&lt;/a&gt;, or displaying the effective pom with &lt;code&gt;help:effective-pom&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;The p2 target platform &amp;amp; dependency resolution can be skipped by setting the &lt;code&gt;tycho-mode&lt;/code&gt; system property:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;mvn -Dtycho.mode=maven &amp;lt;goals&amp;gt;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;This useful feature is a bit hidden in just a few posts, e.g. &lt;a href=&quot;https://www.eclipse.org/lists/tycho-user/msg06439.html&quot;&gt;https://www.eclipse.org/lists/tycho-user/msg06439.html&lt;/a&gt;.&lt;/p&gt;</description>
	<pubDate>Wed, 12 Jun 2019 01:31:39 +0000</pubDate>
</item>
<item>
	<title>Eclipse Announcements: 2019 Annual Eclipse Foundation Community Report</title>
	<guid isPermaLink="true">http://feedproxy.google.com/~r/eclipse/fnews/~3/tnHENPtCA8c/annual_report.php</guid>
	<link>http://feedproxy.google.com/~r/eclipse/fnews/~3/tnHENPtCA8c/annual_report.php</link>
	<description>Read the eighth annual Eclipse Foundation Community Report! Comments and feedback on the style and content are welcome!&lt;img alt=&quot;&quot; height=&quot;1&quot; src=&quot;http://feeds.feedburner.com/~r/eclipse/fnews/~4/tnHENPtCA8c&quot; width=&quot;1&quot; /&gt;</description>
	<pubDate>Tue, 11 Jun 2019 18:05:00 +0000</pubDate>
</item>

</channel>
</rss>
